{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u661f\u661f\u53d1\u4eae\u662f\u4e3a\u4e86\u8ba9\u6bcf\u4e00\u4e2a\u4eba\u6709\u4e00\u5929\u90fd\u80fd\u627e\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684\u661f\u661f","title":"Home"},{"location":"help/start/","text":"mkdocs + github \u5b89\u88c5mkdocs \u9996\u5148\u5b89\u88c5Python sudo pip install mkdocs \u914d\u7f6egithub \u4ed3\u5e93 \u5728github\u4e0a\u521b\u5efa\u4ed3\u5e93\uff0cnote2 git clone git@github.com:wxmustard/note2.git \u8bbe\u7f6emkdocs\u9879\u76ee cd note2 mkdocs new . # \u81ea\u52a8\u751f\u6210 docs\uff08\u6587\u6863\u4e3b\u76ee\u5f55\uff09 mkdocs.yml\uff08\u914d\u7f6e\u6587\u4ef6\uff09 \u521b\u5efa\u7b14\u8bb0md\u6587\u4ef6 # docs #\u251c\u2500\u2500 help #\u2502 \u2514\u2500\u2500 start.md #\u251c\u2500\u2500 index.md #\u2514\u2500\u2500 python # \u2514\u2500\u2500 Chapter7.md \u5efa\u7acb\u7d22\u5f15 vim mkdocs.yml site_name: Mustard's docs theme: name: 'material' nav: - 'help': - '\u5feb\u901f\u5f00\u59cb': 'help/start.md' - 'python notes': - '\u6570\u636e\u7ed3\u6784': 'python/Chapter7.md' - \u672c\u5730\u6d4f\u89c8\uff08/\u8c03\u8bd5\uff09 \u200b```bash mkdocs serve # \u6253\u5f00\u6d4f\u89c8\u5668\u8f93\u5165http://127.0.0.1:8000 \u53d1\u5e03 mkdocs gh-deploy --clean #\u3000--clean\u3000\u6e05\u7406\u4e0d\u5b58\u5728\u7684\u6587\u4ef6 \u66f4\u65b0\u8fdc\u7a0b\u4ed3\u5e93\u5e76\u6d4f\u89c8docs\u6587\u6863 push.sh !/bin/bash git status git add -A git commit -m $1 git push origin master ./push docs # \u8bbf\u95ee\uff1a\u3000https://wxmustard.github.io/note2/ # https://\uff08github\u7528\u6237\u540d\uff09.github.io/\uff08\u8fdc\u7a0b\u4ed3\u5e93\u540d\uff09/","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"help/start/#mkdocs-github","text":"\u5b89\u88c5mkdocs \u9996\u5148\u5b89\u88c5Python sudo pip install mkdocs \u914d\u7f6egithub \u4ed3\u5e93 \u5728github\u4e0a\u521b\u5efa\u4ed3\u5e93\uff0cnote2 git clone git@github.com:wxmustard/note2.git \u8bbe\u7f6emkdocs\u9879\u76ee cd note2 mkdocs new . # \u81ea\u52a8\u751f\u6210 docs\uff08\u6587\u6863\u4e3b\u76ee\u5f55\uff09 mkdocs.yml\uff08\u914d\u7f6e\u6587\u4ef6\uff09 \u521b\u5efa\u7b14\u8bb0md\u6587\u4ef6 # docs #\u251c\u2500\u2500 help #\u2502 \u2514\u2500\u2500 start.md #\u251c\u2500\u2500 index.md #\u2514\u2500\u2500 python # \u2514\u2500\u2500 Chapter7.md \u5efa\u7acb\u7d22\u5f15 vim mkdocs.yml site_name: Mustard's docs theme: name: 'material' nav: - 'help': - '\u5feb\u901f\u5f00\u59cb': 'help/start.md' - 'python notes': - '\u6570\u636e\u7ed3\u6784': 'python/Chapter7.md' - \u672c\u5730\u6d4f\u89c8\uff08/\u8c03\u8bd5\uff09 \u200b```bash mkdocs serve # \u6253\u5f00\u6d4f\u89c8\u5668\u8f93\u5165http://127.0.0.1:8000 \u53d1\u5e03 mkdocs gh-deploy --clean #\u3000--clean\u3000\u6e05\u7406\u4e0d\u5b58\u5728\u7684\u6587\u4ef6 \u66f4\u65b0\u8fdc\u7a0b\u4ed3\u5e93\u5e76\u6d4f\u89c8docs\u6587\u6863 push.sh !/bin/bash git status git add -A git commit -m $1 git push origin master ./push docs # \u8bbf\u95ee\uff1a\u3000https://wxmustard.github.io/note2/ # https://\uff08github\u7528\u6237\u540d\uff09.github.io/\uff08\u8fdc\u7a0b\u4ed3\u5e93\u540d\uff09/","title":"mkdocs + github"},{"location":"python/Chapter1/","text":"\u7f16\u7a0b\u7b80\u4ecb Python \u4e00\u79cd\u8ba1\u7b97\u673a\u7f16\u7a0b\u8bed\u8a00\u53ca\u4e00\u5957\u8f6f\u4ef6\u5de5\u5177\u548c\u5e93\u3002 \u505a\u4ec0\u4e48\uff1f \u811a\u672c\u3001\u7f51\u7ad9\u5f00\u53d1\u3001\u6587\u672c\u5904\u7406\u3001\u79d1\u5b66\u8ba1\u7b97\u3001\u6559\u80b2\u7b49 \u4f18\u70b9 \u7f3a\u70b9 \u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u7a0b\u5e8f\u5458\u5728\u9879\u76ee\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4 \u901f\u5ea6\u6bd4JAVA\u3001C#\u3001C++\u7b49\u8bed\u8a00\u6162\uff0c\u6545\u4e0d\u9002\u5408\u5e94\u7528\u4e8e\u5f00\u53d1\u65b0\u64cd\u4f5c\u7cfb\u7edf \u5de5\u4f5c\u8fc7\u7a0b \u83b7\u5f97\u9700\u6c42 \u7f16\u5199\u6e90\u4ee3\u7801 (.py) \u4f7f\u7528Python\u89e3\u91ca\u5668\u5c06\u6e90\u4ee3\u7801\u8f6c\u6210\u76ee\u6807\u6587\u4ef6(.pyc) \u8fd0\u884c .py\uff1a\u7a0b\u5e8f\uff0c\u6e90\u4ee3\u7801\uff0c\u4ee3\u7801 .pyc\uff1a\u53ef\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8f6f\u4ef6","title":"\u7f16\u7a0b\u7b80\u4ecb"},{"location":"python/Chapter1/#_1","text":"Python \u4e00\u79cd\u8ba1\u7b97\u673a\u7f16\u7a0b\u8bed\u8a00\u53ca\u4e00\u5957\u8f6f\u4ef6\u5de5\u5177\u548c\u5e93\u3002 \u505a\u4ec0\u4e48\uff1f \u811a\u672c\u3001\u7f51\u7ad9\u5f00\u53d1\u3001\u6587\u672c\u5904\u7406\u3001\u79d1\u5b66\u8ba1\u7b97\u3001\u6559\u80b2\u7b49 \u4f18\u70b9 \u7f3a\u70b9 \u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u7a0b\u5e8f\u5458\u5728\u9879\u76ee\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4 \u901f\u5ea6\u6bd4JAVA\u3001C#\u3001C++\u7b49\u8bed\u8a00\u6162\uff0c\u6545\u4e0d\u9002\u5408\u5e94\u7528\u4e8e\u5f00\u53d1\u65b0\u64cd\u4f5c\u7cfb\u7edf \u5de5\u4f5c\u8fc7\u7a0b \u83b7\u5f97\u9700\u6c42 \u7f16\u5199\u6e90\u4ee3\u7801 (.py) \u4f7f\u7528Python\u89e3\u91ca\u5668\u5c06\u6e90\u4ee3\u7801\u8f6c\u6210\u76ee\u6807\u6587\u4ef6(.pyc) \u8fd0\u884c .py\uff1a\u7a0b\u5e8f\uff0c\u6e90\u4ee3\u7801\uff0c\u4ee3\u7801 .pyc\uff1a\u53ef\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8f6f\u4ef6","title":"\u7f16\u7a0b\u7b80\u4ecb"},{"location":"python/Chapter10/","text":"OOP \u7c7b class class Person: # \u6784\u9020\u51fd\u6570\uff0c\u65b9\u6cd5\u7684\u7b2c\u4e00hj\u4e2a\u53c2\u6570\u5fc5\u987b\u662fself def __init__(self, name ='', age = 0): # \u901a\u5e38 _name\u8868\u793a\u53d8\u91cf __age\u8868\u793a\u79c1\u6709\u53d8\u91cf name\u8868\u793a\u65b9\u6cd5 self._name = name self._age = age def __str__(self): return Person(%s ,%d) % (self._name, self._age) def __repr__(self): return str(self) def display(self): print(str(self)) \u4f7f\u7528\u88c5\u9970\u5668\u6765\u5b8c\u6210\u8bbe\u7f6e\u548c\u83b7\u53d6\u51fd\u6570 @property # \u83b7\u53d6\u51fd\u6570 def age(self): return self._age @age.setter # \u8bbe\u7f6e\u51fd\u6570 def age(self, age): self._age = age # \u76f4\u63a5\u4f7f\u7528p.age = 18 \u5373\u53ef\u5b8c\u6210\u53d8\u91cf\u7684\u8d4b\u503c \u7ee7\u627f class teacher(Person): # pass\u8868\u793a\u4ec0\u4e48\u90fd\u4e0d\u505a pass class student(Person): # \u91cd\u5199\u51fd\u6570 def __repr__(self): return student(%s ,%d) % (self._name, self._age)","title":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"},{"location":"python/Chapter10/#oop","text":"","title":"OOP"},{"location":"python/Chapter10/#class","text":"class Person: # \u6784\u9020\u51fd\u6570\uff0c\u65b9\u6cd5\u7684\u7b2c\u4e00hj\u4e2a\u53c2\u6570\u5fc5\u987b\u662fself def __init__(self, name ='', age = 0): # \u901a\u5e38 _name\u8868\u793a\u53d8\u91cf __age\u8868\u793a\u79c1\u6709\u53d8\u91cf name\u8868\u793a\u65b9\u6cd5 self._name = name self._age = age def __str__(self): return Person(%s ,%d) % (self._name, self._age) def __repr__(self): return str(self) def display(self): print(str(self)) \u4f7f\u7528\u88c5\u9970\u5668\u6765\u5b8c\u6210\u8bbe\u7f6e\u548c\u83b7\u53d6\u51fd\u6570 @property # \u83b7\u53d6\u51fd\u6570 def age(self): return self._age @age.setter # \u8bbe\u7f6e\u51fd\u6570 def age(self, age): self._age = age # \u76f4\u63a5\u4f7f\u7528p.age = 18 \u5373\u53ef\u5b8c\u6210\u53d8\u91cf\u7684\u8d4b\u503c \u7ee7\u627f class teacher(Person): # pass\u8868\u793a\u4ec0\u4e48\u90fd\u4e0d\u505a pass class student(Person): # \u91cd\u5199\u51fd\u6570 def __repr__(self): return student(%s ,%d) % (self._name, self._age)","title":"\u7c7b class"},{"location":"python/Chapter2/","text":"\u7b97\u672f\u3001\u5b57\u7b26\u4e32\u4e0e\u53d8\u91cf \u7b97\u672f\uff1a **\u4e58\u65b9 %\u6c42\u4f59 / \u9664 // \u6574\u9664 \u6574\u6570 \u6d6e\u70b9\u6570 \u5982\uff1a5 \u5982\uff1a \u65e0 \u4f1a\u51fa\u73b0\u6ea2\u51fa\u60c5\u51b5 \u65e0 \u7cbe\u5ea6\u6709\u9650 Python \u4f7f\u7528\u6a21\u677f\u524d\u9700\u8981\u5bfc\u5165 \u5bfc\u5165\u65b9\u5f0f import ~ from ~ import * \u4f7f\u7528 ~.\u51fd\u6570() \u51fd\u6570() \u533a\u522b \u4e0d\u4f1a\u8986\u76d6\u5df2\u6709\u51fd\u6570 \u5df2\u6709\u51fd\u6570\u4f1a\u88ab~\u4e2d\u7684\u540c\u540d\u51fd\u6570\u8986\u76d6 \u5b57\u7b26\u4e32\uff1a \u201c \u201d\uff0c\u2018 \u2019\uff0c\u201d\u2018 \u201c\u2019 \u5728\u53cc\u5f15\u53f7\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u5728\u5355\u5f15\u53f7\u4e2d\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5728\u2018\u2019\u2018 \uff5e\u2019\u2018\u2019\u4e2d\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u53cc\u5f15\u53f7\u548c\u5355\u5f15\u53f7\u3002 \u5982\uff1a\u201cIt's good!\u201d \u200b 'said \"YES\" .' \u200b \u201c\u2018It's good! said \"YES\" \u2019\u2018\u2019 len('~') \u8fd4\u56de\uff5e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 ```python len('hello') 5 ``` +\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c*\u5c06\u540c\u4e00\u5b57\u7b26\u4e32\u591a\u6b21\u62fc\u63a5 ```python 2*'HA' HAHA ``` \u5e2e\u52a9 dir(math) : \u5217\u4e3e\u51fa math \u6a21\u5757\u4e2d\u6240\u6709\u51fd\u6570 help(math) : \u67e5\u770b math \u7684\u6587\u6863\u5b57\u7b26\u4e32 \u7c7b\u578b\u8f6c\u6362 -- \u6d6e\u70b9\u6570 -- \u5b57\u7b26\u4e32 -- \u6574\u6570 float(~) str(~) python\u4f1a\u81ea\u52a8\u8fdb\u884c\u9690\u5f0f\u8f6c\u6362 int(~) \u76f4\u63a5\u5220\u9664\u5c0f\u6570\u90e8\u5206 round(~) \u5706\u6574\u7b56\u7565\uff1a\u5c06\u5c0f\u6570\u90e8\u5206\u4e3a0.5\u7684\u5706\u6574\u5230\u6700\u63a5\u8fd1\u7684 \u5076\u6570 \u6570\u5b57\u4e0e\u5b57\u7b26\u4e32\u7684\u91cd\u8981\u7279\u5f81\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e0d\u80fd\u4ee5\u4efb\u4f55\u5f62\u5f0f\u53bb\u4fee\u6539\uff0c\u5728\u770b\u8d77\u6765\u662f\u4fee\u6539\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u4e0b\uff0c Python \u4e2d\u5b9e\u9645\u662f\u5728\u521b\u5efa\u62f7\u8d1d\u3002","title":"\u7b97\u672f\u3001\u5b57\u7b26\u4e32\u4e0e\u53d8\u91cf"},{"location":"python/Chapter2/#_1","text":"\u7b97\u672f\uff1a **\u4e58\u65b9 %\u6c42\u4f59 / \u9664 // \u6574\u9664 \u6574\u6570 \u6d6e\u70b9\u6570 \u5982\uff1a5 \u5982\uff1a \u65e0 \u4f1a\u51fa\u73b0\u6ea2\u51fa\u60c5\u51b5 \u65e0 \u7cbe\u5ea6\u6709\u9650 Python \u4f7f\u7528\u6a21\u677f\u524d\u9700\u8981\u5bfc\u5165 \u5bfc\u5165\u65b9\u5f0f import ~ from ~ import * \u4f7f\u7528 ~.\u51fd\u6570() \u51fd\u6570() \u533a\u522b \u4e0d\u4f1a\u8986\u76d6\u5df2\u6709\u51fd\u6570 \u5df2\u6709\u51fd\u6570\u4f1a\u88ab~\u4e2d\u7684\u540c\u540d\u51fd\u6570\u8986\u76d6 \u5b57\u7b26\u4e32\uff1a \u201c \u201d\uff0c\u2018 \u2019\uff0c\u201d\u2018 \u201c\u2019 \u5728\u53cc\u5f15\u53f7\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u5728\u5355\u5f15\u53f7\u4e2d\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5728\u2018\u2019\u2018 \uff5e\u2019\u2018\u2019\u4e2d\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u53cc\u5f15\u53f7\u548c\u5355\u5f15\u53f7\u3002 \u5982\uff1a\u201cIt's good!\u201d \u200b 'said \"YES\" .' \u200b \u201c\u2018It's good! said \"YES\" \u2019\u2018\u2019 len('~') \u8fd4\u56de\uff5e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 ```python len('hello') 5 ``` +\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c*\u5c06\u540c\u4e00\u5b57\u7b26\u4e32\u591a\u6b21\u62fc\u63a5 ```python 2*'HA' HAHA ``` \u5e2e\u52a9 dir(math) : \u5217\u4e3e\u51fa math \u6a21\u5757\u4e2d\u6240\u6709\u51fd\u6570 help(math) : \u67e5\u770b math \u7684\u6587\u6863\u5b57\u7b26\u4e32 \u7c7b\u578b\u8f6c\u6362 -- \u6d6e\u70b9\u6570 -- \u5b57\u7b26\u4e32 -- \u6574\u6570 float(~) str(~) python\u4f1a\u81ea\u52a8\u8fdb\u884c\u9690\u5f0f\u8f6c\u6362 int(~) \u76f4\u63a5\u5220\u9664\u5c0f\u6570\u90e8\u5206 round(~) \u5706\u6574\u7b56\u7565\uff1a\u5c06\u5c0f\u6570\u90e8\u5206\u4e3a0.5\u7684\u5706\u6574\u5230\u6700\u63a5\u8fd1\u7684 \u5076\u6570 \u6570\u5b57\u4e0e\u5b57\u7b26\u4e32\u7684\u91cd\u8981\u7279\u5f81\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e0d\u80fd\u4ee5\u4efb\u4f55\u5f62\u5f0f\u53bb\u4fee\u6539\uff0c\u5728\u770b\u8d77\u6765\u662f\u4fee\u6539\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u4e0b\uff0c Python \u4e2d\u5b9e\u9645\u662f\u5728\u521b\u5efa\u62f7\u8d1d\u3002","title":"\u7b97\u672f\u3001\u5b57\u7b26\u4e32\u4e0e\u53d8\u91cf"},{"location":"python/Chapter3/","text":"\u7f16\u5199\u7a0b\u5e8f \u5b89\u88c5\u7f16\u8bd1\u73af\u5883\u4ee5\u53ca\u7f16\u5199\u7b2c\u4e00\u4e2a Python \u7a0b\u5e8f ubuntu \u73af\u5883\u4e0b\u5b89\u88c5 Python \u7f16\u8f91\u5668 IDLE bash # \u67e5\u770b\u672c\u673apython\u7248\u672c python --version # \u5b89\u88c5IDLE\u7f16\u8f91\u5668 sudo apt install idle-python2.7 \u4f7f\u7528 IDLE \u7f16\u5199\u7b2c\u4e00\u4e2a Python \u7a0b\u5e8f \u6253\u5f00 IDLE File -- NEW File \u5728\u65b0\u5f39\u51fa\u7684\u7a97\u53e3\u8f93\u5165 Python \u8bed\u53e5 python print('Welcome to Python') File -- Save \u4fdd\u5b58\u6210 .py \u6587\u4ef6 \u8fd0\u884c\u65b9\u6cd5\u4e00 Run -- Run Moudle \u4f1a\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u8fd4\u56de\u7ed3\u679c \u8fd0\u884c\u65b9\u6cd5\u4e8c python python welcome.py \u7f16\u8bd1\u6e90\u4ee3\u7801 \u5728\u8fd0\u884c .py \u6587\u4ef6\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u76f8\u5e94\u7684 .pyc \u6587\u4ef6\uff0c .pyc \u6587\u4ef6\u4e2d\u5305\u542b\u76ee\u6807\u4ee3\u7801\uff0c\u8fd9\u4e2a\u76ee\u6807\u4ee3\u7801\u662f\u4e00\u79cd Python \u4e13\u7528\u7684\u8bed\u8a00\uff0c\u8ba1\u7b97\u673a\u53ef\u4ee5\u9ad8\u6548\u8fd0\u884c\uff0c\u5e76\u4e14 Python \u7a0b\u5e8f\u662f\u5728\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u3002 \u8f93\u5165\u5b57\u7b26\u4e32 python name = input('') # \u51fd\u6570input\u8fd4\u56de\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0cname\u6700\u7ec8\u6307\u5411\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32 # \u5982\u679c\u60f3\u83b7\u5f97\u6570\u5b57\uff0c\u9700\u8981\u81ea\u884c\u5c06\u63a5\u53d7\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\u7c7b\u578b\uff0c\u4f7f\u7528int()\uff0cfloat()\u90fd\u53ef\u4ee5 \u200b \u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u5b57\u7b26\u4e32 python print('hello',end='') print('world') # print\u6253\u5370\u5b8c\u81ea\u52a8\u5728\u6307\u5b9a\u5185\u5bb9\u540e\u6dfb\u52a0\u4e00\u4e2a\u6362\u884c\u7b26\\n # \u5982\u679c\u60f3\u5728\u540c\u4e00\u884c\u8f93\u51fa\uff0c\u9700\u8981\u4f7f\u7528\u4e0a\u8ff0\u8bed\u53e5 \u5728 python \u4e2d\u4f7f\u7528#\u6ce8\u91ca \u5feb\u6377\u952e \u5feb\u6377\u952e \u52a8\u4f5c Ctrl+O open file Ctrl+(Shift)+Z \u64a4\u9500 F5 run moudle Ctrl+N new file","title":"\u7f16\u5199\u7a0b\u5e8f"},{"location":"python/Chapter3/#_1","text":"","title":"\u7f16\u5199\u7a0b\u5e8f"},{"location":"python/Chapter3/#python","text":"ubuntu \u73af\u5883\u4e0b\u5b89\u88c5 Python \u7f16\u8f91\u5668 IDLE bash # \u67e5\u770b\u672c\u673apython\u7248\u672c python --version # \u5b89\u88c5IDLE\u7f16\u8f91\u5668 sudo apt install idle-python2.7 \u4f7f\u7528 IDLE \u7f16\u5199\u7b2c\u4e00\u4e2a Python \u7a0b\u5e8f \u6253\u5f00 IDLE File -- NEW File \u5728\u65b0\u5f39\u51fa\u7684\u7a97\u53e3\u8f93\u5165 Python \u8bed\u53e5 python print('Welcome to Python') File -- Save \u4fdd\u5b58\u6210 .py \u6587\u4ef6 \u8fd0\u884c\u65b9\u6cd5\u4e00 Run -- Run Moudle \u4f1a\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u8fd4\u56de\u7ed3\u679c \u8fd0\u884c\u65b9\u6cd5\u4e8c python python welcome.py","title":"\u5b89\u88c5\u7f16\u8bd1\u73af\u5883\u4ee5\u53ca\u7f16\u5199\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f"},{"location":"python/Chapter3/#_2","text":"\u5728\u8fd0\u884c .py \u6587\u4ef6\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u76f8\u5e94\u7684 .pyc \u6587\u4ef6\uff0c .pyc \u6587\u4ef6\u4e2d\u5305\u542b\u76ee\u6807\u4ee3\u7801\uff0c\u8fd9\u4e2a\u76ee\u6807\u4ee3\u7801\u662f\u4e00\u79cd Python \u4e13\u7528\u7684\u8bed\u8a00\uff0c\u8ba1\u7b97\u673a\u53ef\u4ee5\u9ad8\u6548\u8fd0\u884c\uff0c\u5e76\u4e14 Python \u7a0b\u5e8f\u662f\u5728\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u3002 \u8f93\u5165\u5b57\u7b26\u4e32 python name = input('') # \u51fd\u6570input\u8fd4\u56de\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0cname\u6700\u7ec8\u6307\u5411\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32 # \u5982\u679c\u60f3\u83b7\u5f97\u6570\u5b57\uff0c\u9700\u8981\u81ea\u884c\u5c06\u63a5\u53d7\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\u7c7b\u578b\uff0c\u4f7f\u7528int()\uff0cfloat()\u90fd\u53ef\u4ee5 \u200b \u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u5b57\u7b26\u4e32 python print('hello',end='') print('world') # print\u6253\u5370\u5b8c\u81ea\u52a8\u5728\u6307\u5b9a\u5185\u5bb9\u540e\u6dfb\u52a0\u4e00\u4e2a\u6362\u884c\u7b26\\n # \u5982\u679c\u60f3\u5728\u540c\u4e00\u884c\u8f93\u51fa\uff0c\u9700\u8981\u4f7f\u7528\u4e0a\u8ff0\u8bed\u53e5 \u5728 python \u4e2d\u4f7f\u7528#\u6ce8\u91ca \u5feb\u6377\u952e \u5feb\u6377\u952e \u52a8\u4f5c Ctrl+O open file Ctrl+(Shift)+Z \u64a4\u9500 F5 run moudle Ctrl+N new file","title":"\u7f16\u8bd1\u6e90\u4ee3\u7801"},{"location":"python/Chapter5/","text":"\u51fd\u6570 \u51fd\u6570\u7ed3\u6784 python def sayhi(name): def \u51fd\u6570\u5934 sayhi \u51fd\u6570\u540d name \u53c2\u6570 : \u51fd\u6570\u5934\u5fc5\u987b\u4ee5 : \u4e3a\u7ed3\u5c3e def \u540e\u9762\u6240\u6709\u7f29\u8fdb\u7684\u4ee3\u7801\u90fd\u662f\u51fd\u6570\u4f53 Python \u51fd\u6570\u7684\u53c2\u6570\u662f\u6309\u5f15\u7528\u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u9012\u7684\uff0c\u800cC++\u7b49\u662f\u6309\u503c\u4f20\u9012\u7684 \u53c2\u6570\u9ed8\u8ba4\u503c\u95ee\u9898\uff1a python def Sayhi(name,greet='hello'): \u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5fc5\u987b\u653e\u5728\u65e0\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u540e\u9762 \u5173\u952e\u5b57\u53c2\u6570 ```python def shop(where='shop',what='patsa'): print(where,what) # \u4f7f\u7528\u51fd\u6570 shop(where='store') ``` \u4f7f\u7528\u5173\u952e\u5b57\u51fd\u6570\u7684\u4f18\u70b9\uff1a \u6e05\u6670\u6307\u51fa\u4e86\u53c2\u6570\u503c\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027 \u5173\u952e\u5b57\u7684\u53c2\u6570\u987a\u5e8f\u65e0\u5173\u7d27\u8981","title":"\u51fd\u6570"},{"location":"python/Chapter5/#_1","text":"\u51fd\u6570\u7ed3\u6784 python def sayhi(name): def \u51fd\u6570\u5934 sayhi \u51fd\u6570\u540d name \u53c2\u6570 : \u51fd\u6570\u5934\u5fc5\u987b\u4ee5 : \u4e3a\u7ed3\u5c3e def \u540e\u9762\u6240\u6709\u7f29\u8fdb\u7684\u4ee3\u7801\u90fd\u662f\u51fd\u6570\u4f53 Python \u51fd\u6570\u7684\u53c2\u6570\u662f\u6309\u5f15\u7528\u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u9012\u7684\uff0c\u800cC++\u7b49\u662f\u6309\u503c\u4f20\u9012\u7684 \u53c2\u6570\u9ed8\u8ba4\u503c\u95ee\u9898\uff1a python def Sayhi(name,greet='hello'): \u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5fc5\u987b\u653e\u5728\u65e0\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u540e\u9762 \u5173\u952e\u5b57\u53c2\u6570 ```python def shop(where='shop',what='patsa'): print(where,what) # \u4f7f\u7528\u51fd\u6570 shop(where='store') ``` \u4f7f\u7528\u5173\u952e\u5b57\u51fd\u6570\u7684\u4f18\u70b9\uff1a \u6e05\u6670\u6307\u51fa\u4e86\u53c2\u6570\u503c\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027 \u5173\u952e\u5b57\u7684\u53c2\u6570\u987a\u5e8f\u65e0\u5173\u7d27\u8981","title":"\u51fd\u6570"},{"location":"python/Chapter6/","text":"\u5b57\u7b26\u4e32 \u66ff\u6362\u51fd\u6570 s = 'x_amz_date' # replace(old,new) \u4f7f\u7528new\u66ff\u6362old\u5b57\u7b26 new_s = s.replace('_','-') print(new_s) # x-amz-date","title":"\u5b57\u7b26\u4e32"},{"location":"python/Chapter6/#_1","text":"\u66ff\u6362\u51fd\u6570 s = 'x_amz_date' # replace(old,new) \u4f7f\u7528new\u66ff\u6362old\u5b57\u7b26 new_s = s.replace('_','-') print(new_s) # x-amz-date","title":"\u5b57\u7b26\u4e32"},{"location":"python/Chapter7/","text":"\u6570\u636e\u7ed3\u6784 \u5217\u8868 \u5217\u8868\u662f\u53ef\u53d8\u7684\uff08\u6dfb\u52a0\u3001\u4fee\u6539\u3001\u5220\u9664\u5217\u8868\u5143\u7d20\uff09\uff0c\u4f7f\u7528 [] \u62ec\u8d77\uff0c\u4f7f\u7528 , \u5206\u9694\u3002\u5982 data=[1,2,3,4,5] \u51fd\u6570 \u8bf4\u660e s.append(x) \u5728\u5217\u8868s\u7684\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20x s.pop(i) \u5220\u9664\u5e76\u8fd4\u56des\u4e2d\u7d22\u5f15\u4e3ai\u7684\u5143\u7d20 s.remove(x) \u5220\u9664s\u4e2d\u7684\u7b2c\u4e00\u4e2ax\u5143\u7d20 \u5b57\u5178 \u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u6548\u7387\u6781\u9ad8,\u53ef\u4ee5\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u952e\u503c\u5bf9\u3002\u5982 color={'red':1,'blue':2} \u5b57\u5178\u4e2d\u7684\u952e\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u5373\u4f7f\u5728\u540c\u4e00\u4e2a\u5b57\u5178\u91cc\uff0c\u4e5f\u4e0d\u5141\u8bb8\u4efb\u4f55\u4e24\u4e2a\u952e\u503c\u5bf9\u76f8\u540c # \u904d\u5386\u5b57\u5178\u7684key value out = [] for key in data.keys(): str1 = key + = + data[key] out.append(str1) print(' '.join(out)) out1 = [] for key,value in data.items(): #for (key,value) in data.items(): str2 = key + = + value out1.append(str2) print(' '.join(out1)) # \u904d\u5386\u5b57\u5178\u7684value for value in data.values(): print(value) \u5728\u5b57\u5178\u4e2d\u5d4c\u5957\u5217\u8868 import json data = {'kvmlist':[{'name':'vm01','status':'0'}]} print(data) data1 = {'name':'vm02','status':'1'} list1 = data['kvmlist'] list1.append(data1) data['kvmlist']=list1 print(data) json = json.dumps(data) print(json) {'kvmlist': [{'name': 'vm01', 'status': '0'}]} {'kvmlist': [{'name': 'vm01', 'status': '0'}, {'name': 'vm02', 'status': '1'}]} { kvmlist : [{ name : vm01 , status : 0 }, { name : vm02 , status : 1 }]}","title":"\u6570\u636e\u7ed3\u6784"},{"location":"python/Chapter7/#_1","text":"","title":"\u6570\u636e\u7ed3\u6784"},{"location":"python/Chapter7/#_2","text":"\u5217\u8868\u662f\u53ef\u53d8\u7684\uff08\u6dfb\u52a0\u3001\u4fee\u6539\u3001\u5220\u9664\u5217\u8868\u5143\u7d20\uff09\uff0c\u4f7f\u7528 [] \u62ec\u8d77\uff0c\u4f7f\u7528 , \u5206\u9694\u3002\u5982 data=[1,2,3,4,5] \u51fd\u6570 \u8bf4\u660e s.append(x) \u5728\u5217\u8868s\u7684\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20x s.pop(i) \u5220\u9664\u5e76\u8fd4\u56des\u4e2d\u7d22\u5f15\u4e3ai\u7684\u5143\u7d20 s.remove(x) \u5220\u9664s\u4e2d\u7684\u7b2c\u4e00\u4e2ax\u5143\u7d20","title":"\u5217\u8868"},{"location":"python/Chapter7/#_3","text":"\u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u6548\u7387\u6781\u9ad8,\u53ef\u4ee5\u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u952e\u503c\u5bf9\u3002\u5982 color={'red':1,'blue':2} \u5b57\u5178\u4e2d\u7684\u952e\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u5373\u4f7f\u5728\u540c\u4e00\u4e2a\u5b57\u5178\u91cc\uff0c\u4e5f\u4e0d\u5141\u8bb8\u4efb\u4f55\u4e24\u4e2a\u952e\u503c\u5bf9\u76f8\u540c # \u904d\u5386\u5b57\u5178\u7684key value out = [] for key in data.keys(): str1 = key + = + data[key] out.append(str1) print(' '.join(out)) out1 = [] for key,value in data.items(): #for (key,value) in data.items(): str2 = key + = + value out1.append(str2) print(' '.join(out1)) # \u904d\u5386\u5b57\u5178\u7684value for value in data.values(): print(value)","title":"\u5b57\u5178"},{"location":"python/Chapter7/#_4","text":"import json data = {'kvmlist':[{'name':'vm01','status':'0'}]} print(data) data1 = {'name':'vm02','status':'1'} list1 = data['kvmlist'] list1.append(data1) data['kvmlist']=list1 print(data) json = json.dumps(data) print(json) {'kvmlist': [{'name': 'vm01', 'status': '0'}]} {'kvmlist': [{'name': 'vm01', 'status': '0'}, {'name': 'vm02', 'status': '1'}]} { kvmlist : [{ name : vm01 , status : 0 }, { name : vm02 , status : 1 }]}","title":"\u5728\u5b57\u5178\u4e2d\u5d4c\u5957\u5217\u8868"},{"location":"python/Chapter9/","text":"\u5f02\u5e38\u5904\u7406 \u5728\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u5982\u679c\u4e0d\u6355\u83b7\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5904\u7406\uff0c Python \u4f1a\u7acb\u5373\u505c\u6b62\u8fd0\u884c\u7a0b\u5e8f\u3002 \u6355\u83b7\u6240\u6709\u5f02\u5e38 try: # \u53ef\u80fd\u4f1a\u51fa\u73b0\u5f02\u5e38\u7684\u8bed\u53e5 conn.lookupByName(name) except: # \u5982\u679c\u51fa\u73b0\u5f02\u5e38\u7684\u5e94\u5bf9\u5904\u7406 dominfo = {'message':'\u672a\u627e\u5230\u8be5\u865a\u62df\u673a\uff0c\u8bf7\u786e\u8ba4\u865a\u62df\u673a\u540d\u79f0\u662f\u5426\u6b63\u786e\u3002'} else: # \u6ca1\u6709\u53d1\u751f\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u7684\u8bed\u53e5 domain = conn.lookupByName(name) state, maxmem, mem, cpus, cput = domain.info() if domain.isActive() == 0: status = '\u5df2\u5173\u95ed' if domain.isActive() == 1: status = '\u8fd0\u884c\u4e2d' dominfo = {'name':domain.name(),'UUID':domain.UUIDString(), 'status':status,'memory':str(mem),'max memory':str(maxmem),'cpus':str(cpus)}","title":"\u5f02\u5e38\u5904\u7406"},{"location":"python/Chapter9/#_1","text":"\u5728\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u5982\u679c\u4e0d\u6355\u83b7\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5904\u7406\uff0c Python \u4f1a\u7acb\u5373\u505c\u6b62\u8fd0\u884c\u7a0b\u5e8f\u3002 \u6355\u83b7\u6240\u6709\u5f02\u5e38 try: # \u53ef\u80fd\u4f1a\u51fa\u73b0\u5f02\u5e38\u7684\u8bed\u53e5 conn.lookupByName(name) except: # \u5982\u679c\u51fa\u73b0\u5f02\u5e38\u7684\u5e94\u5bf9\u5904\u7406 dominfo = {'message':'\u672a\u627e\u5230\u8be5\u865a\u62df\u673a\uff0c\u8bf7\u786e\u8ba4\u865a\u62df\u673a\u540d\u79f0\u662f\u5426\u6b63\u786e\u3002'} else: # \u6ca1\u6709\u53d1\u751f\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u7684\u8bed\u53e5 domain = conn.lookupByName(name) state, maxmem, mem, cpus, cput = domain.info() if domain.isActive() == 0: status = '\u5df2\u5173\u95ed' if domain.isActive() == 1: status = '\u8fd0\u884c\u4e2d' dominfo = {'name':domain.name(),'UUID':domain.UUIDString(), 'status':status,'memory':str(mem),'max memory':str(maxmem),'cpus':str(cpus)}","title":"\u5f02\u5e38\u5904\u7406"},{"location":"python/Django/","text":"\u4f01\u4e1a\u7ea7\u5f00\u53d1\u6846\u67b6-Django \u5f00\u53d1\u73af\u5883 \u5728\u5f00\u53d1Python\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u5b89\u88c5\u7684Python3\u53ea\u6709\u4e00\u4e2a\u7248\u672c\uff1a3.4\u3002\u6240\u6709\u7b2c\u4e09\u65b9\u7684\u5305\u90fd\u4f1a\u88ab pip \u5b89\u88c5\u5230Python3\u7684 site-packages \u76ee\u5f55\u4e0b\u3002 \u5982\u679c\u6211\u4eec\u8981\u540c\u65f6\u5f00\u53d1\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u5171\u7528\u4e00\u4e2aPython\uff0c\u5c31\u662f\u5b89\u88c5\u5728\u7cfb\u7edf\u7684Python 3\u3002\u5982\u679c\u5e94\u7528A\u9700\u8981jinja 2.7\uff0c\u800c\u5e94\u7528B\u9700\u8981jinja 2.6\u600e\u4e48\u529e\uff1f \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u5e94\u7528\u53ef\u80fd\u9700\u8981\u5404\u81ea\u62e5\u6709\u4e00\u5957\u201c\u72ec\u7acb\u201d\u7684Python\u8fd0\u884c\u73af\u5883\u3002virtualenv\u5c31\u662f\u7528\u6765\u4e3a\u4e00\u4e2a\u5e94\u7528\u521b\u5efa\u4e00\u5957\u201c\u9694\u79bb\u201d\u7684Python\u8fd0\u884c\u73af\u5883. \u5b89\u88c5 virtualenv sudo pip install virtualenv virtualenvwrapper \u66f4\u6539 .zshrc export WORKON_HOME=/home/mustard/.virtualenvs export PROJECT_HOME=/home/mustard/workspace export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python source /usr/local/bin/virtualenvwrapper.sh # \u4f7f\u66f4\u6539\u751f\u6548 source .zshrc \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9879\u76ee # \u521b\u5efa\u9879\u76ee\u76ee\u5f55 mkdir myproject cd myproject/ # \u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684Python\u8fd0\u884c\u73af\u5883\uff0c\u547d\u540d\u4e3avenv virtualenv --no-site-packages venv # virtualenv\u547d\u4ee4\u662f\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684Python\u8fd0\u884c\u73af\u5883 # --no-site-packages\u53c2\u6570\u662f\u521b\u5efa\u4e00\u4e2a\u5e72\u51c0\u7684\u4e0d\u5305\u542b\u7b2c\u4e09\u65b9\u5305\u7684Python\u8fd0\u884c\u73af\u5883 #\u8fdb\u5165venv\u73af\u5883 source venv/bin/activate # \u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528pip install\u7b49\u547d\u4ee4\u4e86 Django \u5b89\u88c5 bpython \uff0c\u6dfb\u52a0\u81ea\u52a8\u8865\u5168\u529f\u80fd # \u8fdb\u5165venv\u73af\u5883\u540e # 1.\u5347\u7ea7pip pip install --upgrade pip # 2.\u5b89\u88c5Django pip install Django # 3.\u5b89\u88c5bpython pip install bpython # \u8fdb\u5165bpython\uff0c\u67e5\u8be2django\u7248\u672c import django django.VERSION (1, 11, 7, 'final', 0) Django \u57fa\u672c\u547d\u4ee4 # \u521b\u5efa\u65b0\u9879\u76ee mysite django-admin startproject mysite # \u521b\u5efa\u65b0\u5e94\u7528\uff08app\uff09\uff0clearn python manage.py startapp learn # \u5c06\u65b0\u5b9a\u4e49\u7684app\u52a0\u5230settings.py\u4e2d\u7684INSTALL_APPS\u4e2d # \u4fee\u6539mysite/mysite/settings.py INSTALLED_APPS = ( 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'learn', ) # \u65b0\u5efa\u7684 app \u5982\u679c\u4e0d\u52a0\u5230 INSTALL_APPS \u4e2d\u7684\u8bdd, django \u5c31\u4e0d\u80fd\u81ea\u52a8\u627e\u5230app\u4e2d\u7684\u6a21\u677f\u6587\u4ef6(app-name/templates/\u4e0b\u7684\u6587\u4ef6)\u548c\u9759\u6001\u6587\u4ef6(app-name/static/\u4e2d\u7684\u6587\u4ef6) requirements.txt python\u9879\u76ee\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a requirements.txt \u6587\u4ef6\uff0c\u7528\u4e8e\u8bb0\u5f55\u6240\u6709\u4f9d\u8d56\u5305\u53ca\u5176\u7cbe\u786e\u7684\u7248\u672c\u53f7\u3002\u4ee5\u4fbf\u65b0\u73af\u5883\u90e8\u7f72\u3002 # \u751f\u6210requirements.txt pip3 freeze requirements.txt # \u90e8\u7f72\u73af\u5883 pip3 install -r requirements.txt \u4f7f\u7528Django Rest framework\u6846\u67b6 \u57fa\u7840\u8bbe\u7f6e \u4e0b\u8f7d\u6846\u67b6 pip3 install djangorestframework pip3 install pygments \u57fa\u7840\u914d\u7f6e \u5c06app\u6dfb\u52a0\u81f3\u9879\u76ee\u4e2d # \u5c06'vm.apps.VmConfig'\u6dfb\u52a0\u5230kvm/settings.py\u4e2d INSTALLED_APPS = [ 'vm.apps.VmConfig', ] \u4fee\u6539\u9879\u76ee\u7684url # \u6253\u5f00kvm/urls.py,\u5c06\u4ee5\u4e0b\u8bed\u53e5\u6dfb\u52a0\u8fdb\u53bb # \u63d0\u793a\uff1avm/urls.py\u9700\u8981\u81ea\u884c\u521b\u5efa from django.conf.urls import url , include urlpatterns = [ path('admin/', admin.site.urls), url(r'^',include('vm.urls')) ] \u521b\u5efa vm/urls.py # url\u662f\u9884\u5148\u8bbe\u8ba1\u597d\u7684 from django.conf.urls import url from vm import views from rest_framework.urlpatterns import format_suffix_patterns urlpatterns = [ url(r'^v1/vps/$',views.kvm_list), url(r'^v1/vps/kvmname/(?P name [a-zA-Z0-9]+)/$',views.kvm), ] urlpatterns = format_suffix_patterns(urlpatterns) \u6570\u636e\u5e93\u64cd\u4f5c \u914d\u7f6e\u6570\u636e\u5e93\u6587\u4ef6 # \u4fee\u6539django\u9879\u76ee\u7684setting.py\u6587\u4ef6 DATABASES = { 'default': { # 'ENGINE': 'django.db.backends.sqlite3', # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), 'ENGINE': 'django.db.backends.mysql', 'NAME': 's3test', 'USER':'root', 'PASSWORD':'root', 'HOST':'127.0.0.1', 'PORT':'3306', } } \u7f16\u5199\u6a21\u578b\u7c7b # \u7f16\u5199\u9879\u76eeapp\u7684models.py \u6587\u4ef6,\u5982 from django.db import models # Create your models here. class buckets(models.Model): id = models.AutoField(primary_key = True) bucket_name = models.CharField(max_length = 32) create_id = models.CharField(max_length =8) create_at = models.DateTimeField(auto_now_add= True) objects = models.Manager() class users(models.Model): # \u53c2\u6570\u4e2d\u5305\u542bmax_length\u4e3a\u53ef\u53d8\u957f\u5ea6\uff08varchar\u7c7b\u578b\uff09\uff0c\u6ca1\u6709\u53c2\u6570\u7684\u4e3a\u5b9a\u957f\uff08char\u7c7b\u578b\uff09 id = models.AutoField(primary_key = True) access_key = models.CharField(max_length = 64) access_secret = models.CharField(max_length = 64) create_id = models.CharField(max_length =8) # \u5982\u679c\u5728\u6570\u636e\u4e2d\u5df2\u6709\u6570\u636e\u7684\u57fa\u7840\u4e0a\u9700\u8981\u66f4\u6539\u6570\u636e\u5e93\u8bbe\u8ba1\uff0c\u9700\u8981\u5148\u6e05\u7a7a\u8868\u4e2d\u6570\u636e\uff0c\u5e76\u4e3a\u65b0\u589e\u5b57\u6bb5\u6dfb\u52a0\u9ed8\u8ba4\u503c server_address = models.CharField(max_length = 64,default='') # auto_now \u81ea\u52a8\u521b\u5efa---\u65e0\u8bba\u6dfb\u52a0\u6216\u4fee\u6539\uff0c\u90fd\u662f\u5f53\u524d\u64cd\u4f5c\u7684\u65f6\u95f4 ,auto_now_add \u81ea\u52a8\u521b\u5efa---\u6c38\u8fdc\u662f\u521b\u5efa\u65f6\u7684\u65f6\u95f4 create_at = models.DateTimeField(auto_now_add= True) # null=True\u6570\u636e\u5e93\u4e2d\u7684\u5b57\u6bb5\u5141\u8bb8\u4e3a\u7a7a\uff0c\u4f46\u662fdjango\u4f1a\u81ea\u52a8\u68c0\u6d4b\u6570\u636e\u4e0d\u5141\u8bb8\u4e3a\u7a7a\u503c\uff0c\u9700\u8981\u6dfb\u52a0blank=True\u624d\u53ef\u4ee5 update_at = models.DateTimeField(auto_now=True,null=True,blank=True) objects = models.Manager() \u5c06\u65b0\u5efa\u7684 models \u540c\u6b65\u81f3\u6570\u636e\u5e93 # \u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\u4e0e\u672c\u5730\u7684models\u4e4b\u95f4\u7684\u5dee\u5f02,\u751f\u6210\u5408\u5e76\u4ee3\u7801 python manage.py makemigrations # \u5c06\u4f55\u5fc5\u4ee3\u7801\u5bfc\u5165\u6570\u636e\u5e93 python manage.py migrate \u6570\u636e\u5e93\u7684\u57fa\u672c\u64cd\u4f5c( views.py ) \u589e from s3.models import buckets,users,shares bucket = buckets(bucket_name ='mytest',create_id='17721803') bucket.save() \u67e5 from s3.models import buckets,users,shares # \u83b7\u53d6\u8868\u4e2d\u6240\u6709\u6570\u636e bucket = buckets.objects.all() # \u83b7\u5f97\u8868\u4e2d\u6240\u6709\u6570\u636e\u7684values bucket = buckets.objects.all().values('id','bucket_name') bucket1 = buckets.objects.filter().values('id','bucket_name') # \u4f7f\u7528values\u8fdb\u884c\u67e5\u8be2\u6570\u636e\u65f6\u5c06\u8fd4\u56de\u4e00\u4e2aQuerySet\u5bf9\u8c61\uff0c\u5982 QuerySet [{'bucket_name': 'wxmust', 'id': 3}, {'bucket_name': 'mytest', 'id': 9}] # \u5f62\u5f0f\u4e3a[{}]\uff0c\u5217\u8868\u4e2d\u5305\u542b\u5b57\u5178\u7684\u5f62\u5f0f bucket1[0]['id'] # \u83b7\u5f97\u5355\u6761\u6570\u636e bucket = buckets.objects.get(id = 1) bucket = buckets.objects.filter(id = 1) \u5220 from s3.models import buckets,users,shares # \u5220\u9664\u5355\u6761\u6570\u636e buckets.objects.get(id=1).delete() # \u5220\u9664\u591a\u6761\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e buckets.objects.filter(id=1).delete() # \u5220\u9664\u6240\u6709\u6570\u636e buckets.objects.all().delete() \u6539 from s3.models import buckets,users,shares # 1: \u83b7\u5f97\u5355\u6761\u6570\u636e\u4fe1\u606f # 2: \u4fee\u6539\u6570\u636e\u4fe1\u606f # 3: save() user = users.objects.get(create_id='17721803') user.access_key = 'wxmust' user.access_secret = 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY' user.save() \u54cd\u5e94\u5934Response \u8fd4\u56de\u72b6\u6001\u7801 \u4f7f\u7528\u65b9\u6cd5\uff1a return Response(status=status.HTTP_204_NO_CONTENT) \u72b6\u6001\u7801\u5217\u8868\uff1a HTTP_100_CONTINUE = 100 HTTP_101_SWITCHING_PROTOCOLS = 101 HTTP_200_OK = 200 HTTP_201_CREATED = 201 HTTP_202_ACCEPTED = 202 HTTP_203_NON_AUTHORITATIVE_INFORMATION = 203 HTTP_204_NO_CONTENT = 204 HTTP_205_RESET_CONTENT = 205 HTTP_206_PARTIAL_CONTENT = 206 HTTP_207_MULTI_STATUS = 207 HTTP_300_MULTIPLE_CHOICES = 300 HTTP_301_MOVED_PERMANENTLY = 301 HTTP_302_FOUND = 302 HTTP_303_SEE_OTHER = 303 HTTP_304_NOT_MODIFIED = 304 HTTP_305_USE_PROXY = 305 HTTP_306_RESERVED = 306 HTTP_307_TEMPORARY_REDIRECT = 307 HTTP_400_BAD_REQUEST = 400 HTTP_401_UNAUTHORIZED = 401 HTTP_402_PAYMENT_REQUIRED = 402 HTTP_403_FORBIDDEN = 403 HTTP_404_NOT_FOUND = 404 HTTP_405_METHOD_NOT_ALLOWED = 405 HTTP_406_NOT_ACCEPTABLE = 406 HTTP_407_PROXY_AUTHENTICATION_REQUIRED = 407 HTTP_408_REQUEST_TIMEOUT = 408 HTTP_409_CONFLICT = 409 HTTP_410_GONE = 410 HTTP_411_LENGTH_REQUIRED = 411 HTTP_412_PRECONDITION_FAILED = 412 HTTP_413_REQUEST_ENTITY_TOO_LARGE = 413 HTTP_414_REQUEST_URI_TOO_LONG = 414 HTTP_415_UNSUPPORTED_MEDIA_TYPE = 415 HTTP_416_REQUESTED_RANGE_NOT_SATISFIABLE = 416 HTTP_417_EXPECTATION_FAILED = 417 HTTP_422_UNPROCESSABLE_ENTITY = 422 HTTP_423_LOCKED = 423 HTTP_424_FAILED_DEPENDENCY = 424 HTTP_428_PRECONDITION_REQUIRED = 428 HTTP_429_TOO_MANY_REQUESTS = 429 HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE = 431 HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS = 451 HTTP_500_INTERNAL_SERVER_ERROR = 500 HTTP_501_NOT_IMPLEMENTED = 501 HTTP_502_BAD_GATEWAY = 502 HTTP_503_SERVICE_UNAVAILABLE = 503 HTTP_504_GATEWAY_TIMEOUT = 504 HTTP_505_HTTP_VERSION_NOT_SUPPORTED = 505 HTTP_507_INSUFFICIENT_STORAGE = 507 HTTP_511_NETWORK_AUTHENTICATION_REQUIRED = 511 \u81ea\u5b9a\u4e49Response\u54cd\u5e94\u5934 \u53c2\u8003\u8d44\u6599\uff1a http://www.django-rest-framework.org/api-guide/responses/#creating-responses # views.py \u6587\u4ef6\u4e2d\u8fdb\u884c\u81ea\u5b9a\u4e49Response response = Response() # response = Response(status = status.HTTP_200_OK) response['server'] = 'SHU' response1['content_type'] = 'application/octet-stream' return response Q A \u5b57\u5178\u6392\u5e8f \u6309\u7167\u5b57\u5178\u4e2d\u7684 Key \u6392\u5e8f sorted(dict.keys()) # key\u5347\u5e8f\u6392\u5217 sorted(dict.keys(),reverse=True) # key\u964d\u5e8f\u6392\u5217","title":"Python-web:Django"},{"location":"python/Django/#-django","text":"","title":"\u4f01\u4e1a\u7ea7\u5f00\u53d1\u6846\u67b6-Django"},{"location":"python/Django/#_1","text":"\u5728\u5f00\u53d1Python\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u5b89\u88c5\u7684Python3\u53ea\u6709\u4e00\u4e2a\u7248\u672c\uff1a3.4\u3002\u6240\u6709\u7b2c\u4e09\u65b9\u7684\u5305\u90fd\u4f1a\u88ab pip \u5b89\u88c5\u5230Python3\u7684 site-packages \u76ee\u5f55\u4e0b\u3002 \u5982\u679c\u6211\u4eec\u8981\u540c\u65f6\u5f00\u53d1\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u5171\u7528\u4e00\u4e2aPython\uff0c\u5c31\u662f\u5b89\u88c5\u5728\u7cfb\u7edf\u7684Python 3\u3002\u5982\u679c\u5e94\u7528A\u9700\u8981jinja 2.7\uff0c\u800c\u5e94\u7528B\u9700\u8981jinja 2.6\u600e\u4e48\u529e\uff1f \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u5e94\u7528\u53ef\u80fd\u9700\u8981\u5404\u81ea\u62e5\u6709\u4e00\u5957\u201c\u72ec\u7acb\u201d\u7684Python\u8fd0\u884c\u73af\u5883\u3002virtualenv\u5c31\u662f\u7528\u6765\u4e3a\u4e00\u4e2a\u5e94\u7528\u521b\u5efa\u4e00\u5957\u201c\u9694\u79bb\u201d\u7684Python\u8fd0\u884c\u73af\u5883. \u5b89\u88c5 virtualenv sudo pip install virtualenv virtualenvwrapper \u66f4\u6539 .zshrc export WORKON_HOME=/home/mustard/.virtualenvs export PROJECT_HOME=/home/mustard/workspace export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python source /usr/local/bin/virtualenvwrapper.sh # \u4f7f\u66f4\u6539\u751f\u6548 source .zshrc \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9879\u76ee # \u521b\u5efa\u9879\u76ee\u76ee\u5f55 mkdir myproject cd myproject/ # \u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684Python\u8fd0\u884c\u73af\u5883\uff0c\u547d\u540d\u4e3avenv virtualenv --no-site-packages venv # virtualenv\u547d\u4ee4\u662f\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684Python\u8fd0\u884c\u73af\u5883 # --no-site-packages\u53c2\u6570\u662f\u521b\u5efa\u4e00\u4e2a\u5e72\u51c0\u7684\u4e0d\u5305\u542b\u7b2c\u4e09\u65b9\u5305\u7684Python\u8fd0\u884c\u73af\u5883 #\u8fdb\u5165venv\u73af\u5883 source venv/bin/activate # \u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528pip install\u7b49\u547d\u4ee4\u4e86","title":"\u5f00\u53d1\u73af\u5883"},{"location":"python/Django/#django","text":"\u5b89\u88c5 bpython \uff0c\u6dfb\u52a0\u81ea\u52a8\u8865\u5168\u529f\u80fd # \u8fdb\u5165venv\u73af\u5883\u540e # 1.\u5347\u7ea7pip pip install --upgrade pip # 2.\u5b89\u88c5Django pip install Django # 3.\u5b89\u88c5bpython pip install bpython # \u8fdb\u5165bpython\uff0c\u67e5\u8be2django\u7248\u672c import django django.VERSION (1, 11, 7, 'final', 0)","title":"Django"},{"location":"python/Django/#django_1","text":"# \u521b\u5efa\u65b0\u9879\u76ee mysite django-admin startproject mysite # \u521b\u5efa\u65b0\u5e94\u7528\uff08app\uff09\uff0clearn python manage.py startapp learn # \u5c06\u65b0\u5b9a\u4e49\u7684app\u52a0\u5230settings.py\u4e2d\u7684INSTALL_APPS\u4e2d # \u4fee\u6539mysite/mysite/settings.py INSTALLED_APPS = ( 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'learn', ) # \u65b0\u5efa\u7684 app \u5982\u679c\u4e0d\u52a0\u5230 INSTALL_APPS \u4e2d\u7684\u8bdd, django \u5c31\u4e0d\u80fd\u81ea\u52a8\u627e\u5230app\u4e2d\u7684\u6a21\u677f\u6587\u4ef6(app-name/templates/\u4e0b\u7684\u6587\u4ef6)\u548c\u9759\u6001\u6587\u4ef6(app-name/static/\u4e2d\u7684\u6587\u4ef6) requirements.txt python\u9879\u76ee\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a requirements.txt \u6587\u4ef6\uff0c\u7528\u4e8e\u8bb0\u5f55\u6240\u6709\u4f9d\u8d56\u5305\u53ca\u5176\u7cbe\u786e\u7684\u7248\u672c\u53f7\u3002\u4ee5\u4fbf\u65b0\u73af\u5883\u90e8\u7f72\u3002 # \u751f\u6210requirements.txt pip3 freeze requirements.txt # \u90e8\u7f72\u73af\u5883 pip3 install -r requirements.txt","title":"Django\u57fa\u672c\u547d\u4ee4"},{"location":"python/Django/#django-rest-framework","text":"","title":"\u4f7f\u7528Django Rest framework\u6846\u67b6"},{"location":"python/Django/#_2","text":"\u4e0b\u8f7d\u6846\u67b6 pip3 install djangorestframework pip3 install pygments \u57fa\u7840\u914d\u7f6e \u5c06app\u6dfb\u52a0\u81f3\u9879\u76ee\u4e2d # \u5c06'vm.apps.VmConfig'\u6dfb\u52a0\u5230kvm/settings.py\u4e2d INSTALLED_APPS = [ 'vm.apps.VmConfig', ] \u4fee\u6539\u9879\u76ee\u7684url # \u6253\u5f00kvm/urls.py,\u5c06\u4ee5\u4e0b\u8bed\u53e5\u6dfb\u52a0\u8fdb\u53bb # \u63d0\u793a\uff1avm/urls.py\u9700\u8981\u81ea\u884c\u521b\u5efa from django.conf.urls import url , include urlpatterns = [ path('admin/', admin.site.urls), url(r'^',include('vm.urls')) ] \u521b\u5efa vm/urls.py # url\u662f\u9884\u5148\u8bbe\u8ba1\u597d\u7684 from django.conf.urls import url from vm import views from rest_framework.urlpatterns import format_suffix_patterns urlpatterns = [ url(r'^v1/vps/$',views.kvm_list), url(r'^v1/vps/kvmname/(?P name [a-zA-Z0-9]+)/$',views.kvm), ] urlpatterns = format_suffix_patterns(urlpatterns)","title":"\u57fa\u7840\u8bbe\u7f6e"},{"location":"python/Django/#_3","text":"\u914d\u7f6e\u6570\u636e\u5e93\u6587\u4ef6 # \u4fee\u6539django\u9879\u76ee\u7684setting.py\u6587\u4ef6 DATABASES = { 'default': { # 'ENGINE': 'django.db.backends.sqlite3', # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), 'ENGINE': 'django.db.backends.mysql', 'NAME': 's3test', 'USER':'root', 'PASSWORD':'root', 'HOST':'127.0.0.1', 'PORT':'3306', } } \u7f16\u5199\u6a21\u578b\u7c7b # \u7f16\u5199\u9879\u76eeapp\u7684models.py \u6587\u4ef6,\u5982 from django.db import models # Create your models here. class buckets(models.Model): id = models.AutoField(primary_key = True) bucket_name = models.CharField(max_length = 32) create_id = models.CharField(max_length =8) create_at = models.DateTimeField(auto_now_add= True) objects = models.Manager() class users(models.Model): # \u53c2\u6570\u4e2d\u5305\u542bmax_length\u4e3a\u53ef\u53d8\u957f\u5ea6\uff08varchar\u7c7b\u578b\uff09\uff0c\u6ca1\u6709\u53c2\u6570\u7684\u4e3a\u5b9a\u957f\uff08char\u7c7b\u578b\uff09 id = models.AutoField(primary_key = True) access_key = models.CharField(max_length = 64) access_secret = models.CharField(max_length = 64) create_id = models.CharField(max_length =8) # \u5982\u679c\u5728\u6570\u636e\u4e2d\u5df2\u6709\u6570\u636e\u7684\u57fa\u7840\u4e0a\u9700\u8981\u66f4\u6539\u6570\u636e\u5e93\u8bbe\u8ba1\uff0c\u9700\u8981\u5148\u6e05\u7a7a\u8868\u4e2d\u6570\u636e\uff0c\u5e76\u4e3a\u65b0\u589e\u5b57\u6bb5\u6dfb\u52a0\u9ed8\u8ba4\u503c server_address = models.CharField(max_length = 64,default='') # auto_now \u81ea\u52a8\u521b\u5efa---\u65e0\u8bba\u6dfb\u52a0\u6216\u4fee\u6539\uff0c\u90fd\u662f\u5f53\u524d\u64cd\u4f5c\u7684\u65f6\u95f4 ,auto_now_add \u81ea\u52a8\u521b\u5efa---\u6c38\u8fdc\u662f\u521b\u5efa\u65f6\u7684\u65f6\u95f4 create_at = models.DateTimeField(auto_now_add= True) # null=True\u6570\u636e\u5e93\u4e2d\u7684\u5b57\u6bb5\u5141\u8bb8\u4e3a\u7a7a\uff0c\u4f46\u662fdjango\u4f1a\u81ea\u52a8\u68c0\u6d4b\u6570\u636e\u4e0d\u5141\u8bb8\u4e3a\u7a7a\u503c\uff0c\u9700\u8981\u6dfb\u52a0blank=True\u624d\u53ef\u4ee5 update_at = models.DateTimeField(auto_now=True,null=True,blank=True) objects = models.Manager() \u5c06\u65b0\u5efa\u7684 models \u540c\u6b65\u81f3\u6570\u636e\u5e93 # \u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\u4e0e\u672c\u5730\u7684models\u4e4b\u95f4\u7684\u5dee\u5f02,\u751f\u6210\u5408\u5e76\u4ee3\u7801 python manage.py makemigrations # \u5c06\u4f55\u5fc5\u4ee3\u7801\u5bfc\u5165\u6570\u636e\u5e93 python manage.py migrate","title":"\u6570\u636e\u5e93\u64cd\u4f5c"},{"location":"python/Django/#viewspy","text":"\u589e from s3.models import buckets,users,shares bucket = buckets(bucket_name ='mytest',create_id='17721803') bucket.save() \u67e5 from s3.models import buckets,users,shares # \u83b7\u53d6\u8868\u4e2d\u6240\u6709\u6570\u636e bucket = buckets.objects.all() # \u83b7\u5f97\u8868\u4e2d\u6240\u6709\u6570\u636e\u7684values bucket = buckets.objects.all().values('id','bucket_name') bucket1 = buckets.objects.filter().values('id','bucket_name') # \u4f7f\u7528values\u8fdb\u884c\u67e5\u8be2\u6570\u636e\u65f6\u5c06\u8fd4\u56de\u4e00\u4e2aQuerySet\u5bf9\u8c61\uff0c\u5982 QuerySet [{'bucket_name': 'wxmust', 'id': 3}, {'bucket_name': 'mytest', 'id': 9}] # \u5f62\u5f0f\u4e3a[{}]\uff0c\u5217\u8868\u4e2d\u5305\u542b\u5b57\u5178\u7684\u5f62\u5f0f bucket1[0]['id'] # \u83b7\u5f97\u5355\u6761\u6570\u636e bucket = buckets.objects.get(id = 1) bucket = buckets.objects.filter(id = 1) \u5220 from s3.models import buckets,users,shares # \u5220\u9664\u5355\u6761\u6570\u636e buckets.objects.get(id=1).delete() # \u5220\u9664\u591a\u6761\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e buckets.objects.filter(id=1).delete() # \u5220\u9664\u6240\u6709\u6570\u636e buckets.objects.all().delete() \u6539 from s3.models import buckets,users,shares # 1: \u83b7\u5f97\u5355\u6761\u6570\u636e\u4fe1\u606f # 2: \u4fee\u6539\u6570\u636e\u4fe1\u606f # 3: save() user = users.objects.get(create_id='17721803') user.access_key = 'wxmust' user.access_secret = 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY' user.save()","title":"\u6570\u636e\u5e93\u7684\u57fa\u672c\u64cd\u4f5c(views.py)"},{"location":"python/Django/#response","text":"","title":"\u54cd\u5e94\u5934Response"},{"location":"python/Django/#_4","text":"\u4f7f\u7528\u65b9\u6cd5\uff1a return Response(status=status.HTTP_204_NO_CONTENT) \u72b6\u6001\u7801\u5217\u8868\uff1a HTTP_100_CONTINUE = 100 HTTP_101_SWITCHING_PROTOCOLS = 101 HTTP_200_OK = 200 HTTP_201_CREATED = 201 HTTP_202_ACCEPTED = 202 HTTP_203_NON_AUTHORITATIVE_INFORMATION = 203 HTTP_204_NO_CONTENT = 204 HTTP_205_RESET_CONTENT = 205 HTTP_206_PARTIAL_CONTENT = 206 HTTP_207_MULTI_STATUS = 207 HTTP_300_MULTIPLE_CHOICES = 300 HTTP_301_MOVED_PERMANENTLY = 301 HTTP_302_FOUND = 302 HTTP_303_SEE_OTHER = 303 HTTP_304_NOT_MODIFIED = 304 HTTP_305_USE_PROXY = 305 HTTP_306_RESERVED = 306 HTTP_307_TEMPORARY_REDIRECT = 307 HTTP_400_BAD_REQUEST = 400 HTTP_401_UNAUTHORIZED = 401 HTTP_402_PAYMENT_REQUIRED = 402 HTTP_403_FORBIDDEN = 403 HTTP_404_NOT_FOUND = 404 HTTP_405_METHOD_NOT_ALLOWED = 405 HTTP_406_NOT_ACCEPTABLE = 406 HTTP_407_PROXY_AUTHENTICATION_REQUIRED = 407 HTTP_408_REQUEST_TIMEOUT = 408 HTTP_409_CONFLICT = 409 HTTP_410_GONE = 410 HTTP_411_LENGTH_REQUIRED = 411 HTTP_412_PRECONDITION_FAILED = 412 HTTP_413_REQUEST_ENTITY_TOO_LARGE = 413 HTTP_414_REQUEST_URI_TOO_LONG = 414 HTTP_415_UNSUPPORTED_MEDIA_TYPE = 415 HTTP_416_REQUESTED_RANGE_NOT_SATISFIABLE = 416 HTTP_417_EXPECTATION_FAILED = 417 HTTP_422_UNPROCESSABLE_ENTITY = 422 HTTP_423_LOCKED = 423 HTTP_424_FAILED_DEPENDENCY = 424 HTTP_428_PRECONDITION_REQUIRED = 428 HTTP_429_TOO_MANY_REQUESTS = 429 HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE = 431 HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS = 451 HTTP_500_INTERNAL_SERVER_ERROR = 500 HTTP_501_NOT_IMPLEMENTED = 501 HTTP_502_BAD_GATEWAY = 502 HTTP_503_SERVICE_UNAVAILABLE = 503 HTTP_504_GATEWAY_TIMEOUT = 504 HTTP_505_HTTP_VERSION_NOT_SUPPORTED = 505 HTTP_507_INSUFFICIENT_STORAGE = 507 HTTP_511_NETWORK_AUTHENTICATION_REQUIRED = 511","title":"\u8fd4\u56de\u72b6\u6001\u7801"},{"location":"python/Django/#response_1","text":"\u53c2\u8003\u8d44\u6599\uff1a http://www.django-rest-framework.org/api-guide/responses/#creating-responses # views.py \u6587\u4ef6\u4e2d\u8fdb\u884c\u81ea\u5b9a\u4e49Response response = Response() # response = Response(status = status.HTTP_200_OK) response['server'] = 'SHU' response1['content_type'] = 'application/octet-stream' return response","title":"\u81ea\u5b9a\u4e49Response\u54cd\u5e94\u5934"},{"location":"python/Django/#qa","text":"","title":"Q&amp;A"},{"location":"python/Django/#_5","text":"\u6309\u7167\u5b57\u5178\u4e2d\u7684 Key \u6392\u5e8f sorted(dict.keys()) # key\u5347\u5e8f\u6392\u5217 sorted(dict.keys(),reverse=True) # key\u964d\u5e8f\u6392\u5217","title":"\u5b57\u5178\u6392\u5e8f"},{"location":"python/Flask/","text":"\u5feb\u901f\u5efa\u7ad9\u7684\u5fae\u6846\u67b6-Flask \u5b89\u88c5Flask(Linux) sudo pip3 install Flask sudo pip3 install sqlalchemy # sqlalchemy\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86ORM\u6570\u636e\u5e93\u6a21\u578b\u7684Python\u5e93 sudo pip3 install flask-wtf # WTForm\u662f\u4e00\u4e2a\u7b80\u5316HTML\u8868\u5355\u5904\u7406\u7684Python\u5e93,flask-wtf\u63d0\u4f9b\u4e86\u5bf9WTForm\u7684\u5b89\u88c5 \u5b9e\u73b0 # \u5f15\u5165\u5305 from flask import Flask # \u5efa\u7acb\u4e00\u4e2aFlask\u7684\u5b9e\u4f53app app = Flask(__name__) # \u6a21\u677f\u6e32\u67d3 from flask import render_template # \u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u591a\u4e2aroute()\u88c5\u9970\u5668\u7ed1\u5b9a\u5230\u591a\u4e2aURL\u4e0a @app.route('/hello') # \u5728\u8def\u5f84\u4e2d\u6dfb\u52a0\u53d8\u91cf,\u5206\u4e3a\u4e24\u6b65,\u4e00\u662f\u5728\u88c5\u9970\u5668\u4e2d\u4f7f\u7528 variable_name \u7684\u65b9\u5f0f\u58f0\u660e,\u4e8c\u662f\u5728\u6240\u6620\u5c04\u7684\u51fd\u6570\u7684\u53c2\u6570\u4e2d\u58f0\u660e,\u4e24\u6b21\u58f0\u660e\u7684\u53d8\u91cf\u540d\u5fc5\u987b\u4e00\u81f4. @app.route('/hello/ name ') def hello(name=None): # render_template\u52a0\u8f7d\u6a21\u677f\u6587\u4ef6\u53ca\u53c2\u6570,\u53ea\u9700\u8981\u6307\u5b9a\u6a21\u677f(html)\u540d\u79f0\u5373\u53ef,Flask\u4f1a\u81ea\u52a8\u5728/templates\u6587\u4ef6\u5939\u4e0b\u5bfb\u627e return render_template('hello.html',name=name) # \u91cd\u5b9a\u5411\u4e0e\u9519\u8bef\u5904\u7406 from flask import abort,redirect,render_template # \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\u5668(Http\u5b9a\u4e49\u4e86\u6807\u51c6\u7684\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u8868,\u5927\u4e8e\u7b49\u4e8e400\u7684\u4ee3\u7801\u90fd\u662f\u9519\u8bef) @app.errorhandler(400) def bad_request(error): return render_template('bad_request.html'),400 @app.route('/') def index(): # \u91cd\u5b9a\u5411\u5230check\u9875\u9762 return redirect('/check') @app.route('/check') def f_check(): #\u5373\u523b\u8fd4\u56de400\u9519\u8bef\u7ed9\u5ba2\u6237\u7aef abort(400) # abort()\u7528\u4e8e\u4e2d\u6b62\u4e00\u4e2a\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef # \u5f53\u672c\u6a21\u5757\u88ab\u76f4\u63a5\u542f\u52a8\u65f6\u624d\u4f1a\u8fd0\u884c\u5176\u4f5c\u7528\u57df\u4e2d\u7684\u4ee3\u7801 if __name__ == __main__ : app.run() #\u8fdb\u5165Flask\u6d88\u606f\u5faa\u73af,\u4e0d\u8981\u5728\u672c\u53e5\u540e\u5199\u4efb\u4f55\u4ee3\u7801,app.run()\u4f1a\u4e00\u76f4\u6267\u884c \u5728\u8def\u5f84\u4e2d\u58f0\u660e\u53d8\u91cf\u65f6\u8fd8\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b: \u6620\u5c04\u7c7b\u578b \u8bf4\u660e int \u63a5\u53d7\u6574\u6570\u578b\u53d8\u91cf @app.route('/add/ int:number ') float \u63a5\u53d7\u6d6e\u70b9\u578b\u53d8\u91cf path \u9ed8\u8ba4\u65b9\u5f0f,\u63a5\u53d7\u8def\u5f84\u5b57\u7b26\u4e32 \u8def\u5f84\u4e2d / \u7684\u7591\u95ee? \u5728URL\u4e2d, / \u88ab\u8ba4\u4e3a\u662f\u8def\u5f84\u5206\u9694\u7b26,\u5f53 / \u5728URL\u5f00\u5934\u65f6\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84,\u5728\u4e2d\u95f4\u65f6\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u9694\u79bb\u8def\u5f84\u7684\u5c42\u7ea7,\u5728\u540e\u9762\u65f6\u5373\u53ef\u4ee5\u8bbf\u95ee\u5230\u6709 / \u7684\u8def\u5f84,\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5230\u65e0 / \u7684\u8def\u5f84. \u58f0\u660e \u4e3e\u4f8b \u662f\u5426\u53ef\u4ee5\u8bbf\u95ee @app.route('/school/') http://localhost/school \u53ef\u4ee5 http://localhost/school/ \u53ef\u4ee5 @app.route('/school') http://localhost/school \u53ef\u4ee5 http://localhost/school/ \u4e0d\u53ef\u4ee5 HTTP\u65b9\u6cd5\u7ed1\u5b9a # \u6307\u5b9aHTTP\u8bbf\u95ee\u65b9\u5f0f from flask import request # \u5982\u679c\u4e0d\u5bfc\u5165request\u4f1a\u62a5\u9519 @app.route('/SendMessage',methods=['GET','POST']) def Message(): if request.method == POST : print( POST ) else: print( GET ) return render_template('hello.html') \u5982\u679c\u51fa\u73b0 ValueError: View function did not return a response \u9519\u8bef,\u8bf4\u660e\u4ee3\u7801\u7f29\u8fdb\u6709\u95ee\u9898\u6216\u8005\u662f\u8fd4\u56de\u503c\u5b58\u5728\u95ee\u9898. # \u6839\u636e\u8bbf\u95ee\u65b9\u5f0f\u7684\u4e0d\u540c\u5c06\u540c\u4e00\u4e2aURL\u6620\u5c04\u5230\u4e0d\u540c\u7684\u51fd\u6570\u4e2d @app.route('/Message', methods=[ 'POST']) def do_send(): print( This is for POST methods ) @app.route('/Message', methods=['GET']) def show_the_send_form(): print( This is for GET methods ) \u8def\u7531\u5730\u5740\u53cd\u5411\u751f\u6210 from flask import url_for with app.test_request_context(): print(url_for('do_send')) print(url_for('hello')) print(url_for('hello',name='mustard')) # \u4ee5\u4e0b\u662f\u8f93\u51fa /Message /hello /hello/mustard # flask\u4e2d\u7684test_request_context()\u65b9\u6cd5\u662f\u4e3a\u4e86\u544a\u8bc9\u89e3\u91ca\u5668\u5728\u5176\u4f5c\u7528\u57df\u4e2d\u7684\u4ee3\u7801\u6a21\u62df\u4e00\u4e2aHTTP\u8bf7\u6c42\u4e0a\u4e0b\u6587 Jinja2\u6a21\u677f {{\u8f93\u51fa\u53d8\u91cf\u540d\u6216\u8868\u8fbe\u5f0f}} {%\u903b\u8f91\u63a7\u5236,\u5982\u5faa\u73af\u8fed\u4ee3\u7b49%} {#\u6ce8\u91ca#}","title":"Python-web:Flask"},{"location":"python/Flask/#-flask","text":"","title":"\u5feb\u901f\u5efa\u7ad9\u7684\u5fae\u6846\u67b6-Flask"},{"location":"python/Flask/#flasklinux","text":"sudo pip3 install Flask sudo pip3 install sqlalchemy # sqlalchemy\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86ORM\u6570\u636e\u5e93\u6a21\u578b\u7684Python\u5e93 sudo pip3 install flask-wtf # WTForm\u662f\u4e00\u4e2a\u7b80\u5316HTML\u8868\u5355\u5904\u7406\u7684Python\u5e93,flask-wtf\u63d0\u4f9b\u4e86\u5bf9WTForm\u7684\u5b89\u88c5","title":"\u5b89\u88c5Flask(Linux)"},{"location":"python/Flask/#_1","text":"# \u5f15\u5165\u5305 from flask import Flask # \u5efa\u7acb\u4e00\u4e2aFlask\u7684\u5b9e\u4f53app app = Flask(__name__) # \u6a21\u677f\u6e32\u67d3 from flask import render_template # \u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u591a\u4e2aroute()\u88c5\u9970\u5668\u7ed1\u5b9a\u5230\u591a\u4e2aURL\u4e0a @app.route('/hello') # \u5728\u8def\u5f84\u4e2d\u6dfb\u52a0\u53d8\u91cf,\u5206\u4e3a\u4e24\u6b65,\u4e00\u662f\u5728\u88c5\u9970\u5668\u4e2d\u4f7f\u7528 variable_name \u7684\u65b9\u5f0f\u58f0\u660e,\u4e8c\u662f\u5728\u6240\u6620\u5c04\u7684\u51fd\u6570\u7684\u53c2\u6570\u4e2d\u58f0\u660e,\u4e24\u6b21\u58f0\u660e\u7684\u53d8\u91cf\u540d\u5fc5\u987b\u4e00\u81f4. @app.route('/hello/ name ') def hello(name=None): # render_template\u52a0\u8f7d\u6a21\u677f\u6587\u4ef6\u53ca\u53c2\u6570,\u53ea\u9700\u8981\u6307\u5b9a\u6a21\u677f(html)\u540d\u79f0\u5373\u53ef,Flask\u4f1a\u81ea\u52a8\u5728/templates\u6587\u4ef6\u5939\u4e0b\u5bfb\u627e return render_template('hello.html',name=name) # \u91cd\u5b9a\u5411\u4e0e\u9519\u8bef\u5904\u7406 from flask import abort,redirect,render_template # \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\u5668(Http\u5b9a\u4e49\u4e86\u6807\u51c6\u7684\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u8868,\u5927\u4e8e\u7b49\u4e8e400\u7684\u4ee3\u7801\u90fd\u662f\u9519\u8bef) @app.errorhandler(400) def bad_request(error): return render_template('bad_request.html'),400 @app.route('/') def index(): # \u91cd\u5b9a\u5411\u5230check\u9875\u9762 return redirect('/check') @app.route('/check') def f_check(): #\u5373\u523b\u8fd4\u56de400\u9519\u8bef\u7ed9\u5ba2\u6237\u7aef abort(400) # abort()\u7528\u4e8e\u4e2d\u6b62\u4e00\u4e2a\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef # \u5f53\u672c\u6a21\u5757\u88ab\u76f4\u63a5\u542f\u52a8\u65f6\u624d\u4f1a\u8fd0\u884c\u5176\u4f5c\u7528\u57df\u4e2d\u7684\u4ee3\u7801 if __name__ == __main__ : app.run() #\u8fdb\u5165Flask\u6d88\u606f\u5faa\u73af,\u4e0d\u8981\u5728\u672c\u53e5\u540e\u5199\u4efb\u4f55\u4ee3\u7801,app.run()\u4f1a\u4e00\u76f4\u6267\u884c \u5728\u8def\u5f84\u4e2d\u58f0\u660e\u53d8\u91cf\u65f6\u8fd8\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b: \u6620\u5c04\u7c7b\u578b \u8bf4\u660e int \u63a5\u53d7\u6574\u6570\u578b\u53d8\u91cf @app.route('/add/ int:number ') float \u63a5\u53d7\u6d6e\u70b9\u578b\u53d8\u91cf path \u9ed8\u8ba4\u65b9\u5f0f,\u63a5\u53d7\u8def\u5f84\u5b57\u7b26\u4e32 \u8def\u5f84\u4e2d / \u7684\u7591\u95ee? \u5728URL\u4e2d, / \u88ab\u8ba4\u4e3a\u662f\u8def\u5f84\u5206\u9694\u7b26,\u5f53 / \u5728URL\u5f00\u5934\u65f6\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84,\u5728\u4e2d\u95f4\u65f6\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u9694\u79bb\u8def\u5f84\u7684\u5c42\u7ea7,\u5728\u540e\u9762\u65f6\u5373\u53ef\u4ee5\u8bbf\u95ee\u5230\u6709 / \u7684\u8def\u5f84,\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5230\u65e0 / \u7684\u8def\u5f84. \u58f0\u660e \u4e3e\u4f8b \u662f\u5426\u53ef\u4ee5\u8bbf\u95ee @app.route('/school/') http://localhost/school \u53ef\u4ee5 http://localhost/school/ \u53ef\u4ee5 @app.route('/school') http://localhost/school \u53ef\u4ee5 http://localhost/school/ \u4e0d\u53ef\u4ee5 HTTP\u65b9\u6cd5\u7ed1\u5b9a # \u6307\u5b9aHTTP\u8bbf\u95ee\u65b9\u5f0f from flask import request # \u5982\u679c\u4e0d\u5bfc\u5165request\u4f1a\u62a5\u9519 @app.route('/SendMessage',methods=['GET','POST']) def Message(): if request.method == POST : print( POST ) else: print( GET ) return render_template('hello.html') \u5982\u679c\u51fa\u73b0 ValueError: View function did not return a response \u9519\u8bef,\u8bf4\u660e\u4ee3\u7801\u7f29\u8fdb\u6709\u95ee\u9898\u6216\u8005\u662f\u8fd4\u56de\u503c\u5b58\u5728\u95ee\u9898. # \u6839\u636e\u8bbf\u95ee\u65b9\u5f0f\u7684\u4e0d\u540c\u5c06\u540c\u4e00\u4e2aURL\u6620\u5c04\u5230\u4e0d\u540c\u7684\u51fd\u6570\u4e2d @app.route('/Message', methods=[ 'POST']) def do_send(): print( This is for POST methods ) @app.route('/Message', methods=['GET']) def show_the_send_form(): print( This is for GET methods ) \u8def\u7531\u5730\u5740\u53cd\u5411\u751f\u6210 from flask import url_for with app.test_request_context(): print(url_for('do_send')) print(url_for('hello')) print(url_for('hello',name='mustard')) # \u4ee5\u4e0b\u662f\u8f93\u51fa /Message /hello /hello/mustard # flask\u4e2d\u7684test_request_context()\u65b9\u6cd5\u662f\u4e3a\u4e86\u544a\u8bc9\u89e3\u91ca\u5668\u5728\u5176\u4f5c\u7528\u57df\u4e2d\u7684\u4ee3\u7801\u6a21\u62df\u4e00\u4e2aHTTP\u8bf7\u6c42\u4e0a\u4e0b\u6587","title":"\u5b9e\u73b0"},{"location":"python/Flask/#jinja2","text":"{{\u8f93\u51fa\u53d8\u91cf\u540d\u6216\u8868\u8fbe\u5f0f}} {%\u903b\u8f91\u63a7\u5236,\u5982\u5faa\u73af\u8fed\u4ee3\u7b49%} {#\u6ce8\u91ca#}","title":"Jinja2\u6a21\u677f"},{"location":"python/Q&A/","text":"Q A ImportError: cannot import name 'Minio' python \u5728\u5bfc\u5305\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u4ee5\u4e0a\u9519\u8bef\uff0c\u53ef\u4ee5\u4ece\u4e09\u4e2a\u65b9\u9762\u5206\u6790\u89e3\u51b3\u95ee\u9898\uff1a \u68c0\u67e5\u5bfc\u5305\u7684 py \u6587\u4ef6\u662f\u5426\u4e0e\u5305\u7684\u540d\u5b57\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\u7684\u8bdd\u4f1a\u4e0e\u9ed8\u8ba4\u7684\u5305\u53d1\u751f\u51b2\u7a81 \u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u4e0b\u8f7d\u7b2c\u4e09\u65b9\u5e93 sudo pip3 list sudo pip3 install *** \u4f7f\u7528 virtualenv \u73af\u5883 virtualenv venv source venv/bin/activate \u4f9d\u8d56\u6587\u6863 Python\u9879\u76ee\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a requirements.txt \u6587\u4ef6\uff0c\u7528\u4e8e\u8bb0\u5f55\u6240\u6709\u4f9d\u8d56\u5305\u53ca\u5176\u7cbe\u786e\u7684\u7248\u672c\u53f7\u3002\u4ee5\u4fbf\u65b0\u73af\u5883\u90e8\u7f72\u3002 pip freeze requirements.txt # \u751f\u6210requirements.txt pip install -r requirements.txt # \u4ecerequirements.txt\u5b89\u88c5\u4f9d\u8d56","title":"Q&A"},{"location":"python/Q&A/#qa","text":"","title":"Q&amp;A"},{"location":"python/Q&A/#importerror-cannot-import-name-minio","text":"python \u5728\u5bfc\u5305\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u4ee5\u4e0a\u9519\u8bef\uff0c\u53ef\u4ee5\u4ece\u4e09\u4e2a\u65b9\u9762\u5206\u6790\u89e3\u51b3\u95ee\u9898\uff1a \u68c0\u67e5\u5bfc\u5305\u7684 py \u6587\u4ef6\u662f\u5426\u4e0e\u5305\u7684\u540d\u5b57\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\u7684\u8bdd\u4f1a\u4e0e\u9ed8\u8ba4\u7684\u5305\u53d1\u751f\u51b2\u7a81 \u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u4e0b\u8f7d\u7b2c\u4e09\u65b9\u5e93 sudo pip3 list sudo pip3 install *** \u4f7f\u7528 virtualenv \u73af\u5883 virtualenv venv source venv/bin/activate","title":"ImportError: cannot import name 'Minio'"},{"location":"python/Q&A/#_1","text":"Python\u9879\u76ee\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a requirements.txt \u6587\u4ef6\uff0c\u7528\u4e8e\u8bb0\u5f55\u6240\u6709\u4f9d\u8d56\u5305\u53ca\u5176\u7cbe\u786e\u7684\u7248\u672c\u53f7\u3002\u4ee5\u4fbf\u65b0\u73af\u5883\u90e8\u7f72\u3002 pip freeze requirements.txt # \u751f\u6210requirements.txt pip install -r requirements.txt # \u4ecerequirements.txt\u5b89\u88c5\u4f9d\u8d56","title":"\u4f9d\u8d56\u6587\u6863"}]}